{"remainingRequest":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/src/components/sys/basic/DepMana.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/src/components/sys/basic/DepMana.vue","mtime":1609308664000},{"path":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ckg/git 总代码/ChatRoom_OnLive/personal/rj_vue/rj_user/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"DepMana\",\n    data() {\n        return {\n            dialogVisible: false,\n            filterText: '',\n            dep: {\n                name: '',\n                parentId: -1\n            },\n            pname: '',\n            deps: [],\n            defaultProps: {\n                children: 'children',\n                label: 'name'\n            }\n        }\n    },\n    watch: {\n        filterText(val) {\n            this.$refs.tree.filter(val);\n        }\n    },\n    mounted() {\n        this.initDeps();\n    },\n    methods: {\n        initDep() {\n            this.dep = {\n                name: '',\n                parentId: -1\n            }\n            this.pname = '';\n        },\n        addDep2Deps(deps, dep) {\n            for (let i = 0; i < deps.length; i++) {\n                let d = deps[i];\n                if (d.id == dep.parentId) {\n                    d.children = d.children.concat(dep);\n                    if (d.children.length > 0) {\n                        d.parent = true;\n                    }\n                    return;\n                } else {\n                    this.addDep2Deps(d.children, dep);\n                }\n            }\n        },\n        doAddDep() {\n            this.postRequest(\"/system/basic/department/\", this.dep).then(resp => {\n                if (resp) {\n                    this.addDep2Deps(this.deps, resp.obj);\n                    this.dialogVisible = false;\n                    //初始化变量\n                    this.initDep();\n                }\n            })\n        },\n        removeDepFromDeps(p,deps, id) {\n            for(let i=0;i<deps.length;i++){\n                let d = deps[i];\n                if (d.id == id) {\n                    deps.splice(i, 1);\n                    if (deps.length == 0) {\n                        p.parent = false;\n                    }\n                    return;\n                }else{\n                    this.removeDepFromDeps(d,d.children, id);\n                }\n            }\n        },\n        deleteDep(data) {\n            if (data.parent) {\n                this.$message.error(\"父部门删除失败\");\n            } else {\n                this.$confirm('此操作将永久删除【' + data.name + '】部门, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                   this.deleteRequest(\"/system/basic/department/\"+data.id).then(resp=>{\n                       if (resp) {\n                           this.removeDepFromDeps(null,this.deps,data.id);\n                       }\n                   })\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    });\n                });\n            }\n        },\n        showAddDepView(data) {\n            this.pname = data.name;\n            this.dep.parentId = data.id;\n            this.dialogVisible = true;\n        },\n        initDeps() {\n            this.getRequest(\"/system/basic/department/\").then(resp => {\n                if (resp) {\n                    this.deps = resp;\n                }\n            })\n        },\n        filterNode(value, data) {\n            if (!value) return true;\n            return data.name.indexOf(value) !== -1;\n        }\n    }\n}\n",{"version":3,"sources":["DepMana.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"DepMana.vue","sourceRoot":"src/components/sys/basic","sourcesContent":["<template>\n    <div style=\"width: 500px;\">\n        <el-input\n                placeholder=\"请输入部门名称进行搜索...\"\n                prefix-icon=\"el-icon-search\"\n                v-model=\"filterText\">\n        </el-input>\n\n        <el-tree\n                :data=\"deps\"\n                :props=\"defaultProps\"\n                :expand-on-click-node=\"false\"\n                :filter-node-method=\"filterNode\"\n                ref=\"tree\">\n            <span class=\"custom-tree-node\" style=\"display: flex;justify-content: space-between;width: 100%;\"\n                  slot-scope=\"{ node, data }\">\n        <span>{{data.name }}</span>\n        <span>\n          <el-button\n                  type=\"primary\"\n                  size=\"mini\"\n                  class=\"depBtn\"\n                  @click=\"() => showAddDepView(data)\">\n            添加部门\n          </el-button>\n          <el-button\n                  type=\"danger\"\n                  size=\"mini\"\n                  class=\"depBtn\"\n                  @click=\"() => deleteDep(data)\">\n            删除部门\n          </el-button>\n        </span>\n      </span>\n        </el-tree>\n        <el-dialog\n                title=\"添加部门\"\n                :visible.sync=\"dialogVisible\"\n                width=\"30%\">\n            <div>\n                <table>\n                    <tr>\n                        <td>\n                            <el-tag>上级部门</el-tag>\n                        </td>\n                        <td>{{pname}}</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <el-tag>部门名称</el-tag>\n                        </td>\n                        <td>\n                            <el-input v-model=\"dep.name\" placeholder=\"请输入部门名称...\"></el-input>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"doAddDep\">确 定</el-button>\n  </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"DepMana\",\n        data() {\n            return {\n                dialogVisible: false,\n                filterText: '',\n                dep: {\n                    name: '',\n                    parentId: -1\n                },\n                pname: '',\n                deps: [],\n                defaultProps: {\n                    children: 'children',\n                    label: 'name'\n                }\n            }\n        },\n        watch: {\n            filterText(val) {\n                this.$refs.tree.filter(val);\n            }\n        },\n        mounted() {\n            this.initDeps();\n        },\n        methods: {\n            initDep() {\n                this.dep = {\n                    name: '',\n                    parentId: -1\n                }\n                this.pname = '';\n            },\n            addDep2Deps(deps, dep) {\n                for (let i = 0; i < deps.length; i++) {\n                    let d = deps[i];\n                    if (d.id == dep.parentId) {\n                        d.children = d.children.concat(dep);\n                        if (d.children.length > 0) {\n                            d.parent = true;\n                        }\n                        return;\n                    } else {\n                        this.addDep2Deps(d.children, dep);\n                    }\n                }\n            },\n            doAddDep() {\n                this.postRequest(\"/system/basic/department/\", this.dep).then(resp => {\n                    if (resp) {\n                        this.addDep2Deps(this.deps, resp.obj);\n                        this.dialogVisible = false;\n                        //初始化变量\n                        this.initDep();\n                    }\n                })\n            },\n            removeDepFromDeps(p,deps, id) {\n                for(let i=0;i<deps.length;i++){\n                    let d = deps[i];\n                    if (d.id == id) {\n                        deps.splice(i, 1);\n                        if (deps.length == 0) {\n                            p.parent = false;\n                        }\n                        return;\n                    }else{\n                        this.removeDepFromDeps(d,d.children, id);\n                    }\n                }\n            },\n            deleteDep(data) {\n                if (data.parent) {\n                    this.$message.error(\"父部门删除失败\");\n                } else {\n                    this.$confirm('此操作将永久删除【' + data.name + '】部门, 是否继续?', '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n                       this.deleteRequest(\"/system/basic/department/\"+data.id).then(resp=>{\n                           if (resp) {\n                               this.removeDepFromDeps(null,this.deps,data.id);\n                           }\n                       })\n                    }).catch(() => {\n                        this.$message({\n                            type: 'info',\n                            message: '已取消删除'\n                        });\n                    });\n                }\n            },\n            showAddDepView(data) {\n                this.pname = data.name;\n                this.dep.parentId = data.id;\n                this.dialogVisible = true;\n            },\n            initDeps() {\n                this.getRequest(\"/system/basic/department/\").then(resp => {\n                    if (resp) {\n                        this.deps = resp;\n                    }\n                })\n            },\n            filterNode(value, data) {\n                if (!value) return true;\n                return data.name.indexOf(value) !== -1;\n            }\n        }\n    }\n</script>\n\n<style>\n    .depBtn {\n        padding: 2px;\n    }\n</style>"]}]}